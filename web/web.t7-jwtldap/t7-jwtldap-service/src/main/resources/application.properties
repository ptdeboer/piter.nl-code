##########################################################################
# Build info
##########################################################################
webapp.application.name=@project.artifactId@
webapp.build.version=@project.version@
webapp.build.timestamp=@app.build.timestamp@
##########################################################################
# Service Configuration and startup.
##########################################################################
# Port on server in which the API will be available
server.port=9001
spring.banner.location=text/piter.nl.txt
#server.error.whitelabel.enabled=false
##########################################################################
# Logging
##########################################################################
# For backend logging configuration see logback-spring.xml (if enabled on classpath)
logging.level.root=ERROR
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR
# DEV
logging.level.nl.piter.web.t7=DEBUG
# Logging pattern for the console
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] - %-5level %logger{36}#%line - %msg%n
# Logging pattern for file
logging.file.name = log/webapp.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36}#%line - %msg%n
##############################################
# Security; Authentication and Authorization
##############################################
# Specify default admin user if no authorization provider is used.
# Must be disabled when using LDAP.
webapp.authentication.local.admin.username=admin
webapp.authentication.local.admin.password=$2a$08$lDnHPz7eUkSi6ao14Twuau08mzhWrL4kyZGGU5xfiGALO/Vxd5DOi
# WARNING: Explicit Authorities for the default user (admin) which bypasses UserDetails DB:
webapp.authentication.local.admin.authorities=LOCAL_ADMIN,LOCAL_EDITOR
webapp.authentication.local.admin.enabled=true

### JSON Web Tokens
jwt.header=Authorization
jwt.secret=MyJwtSecretMustHave32Characters...
# set to short time for this demo.
jwt.expiration=60
jwt.route.authentication.path=auth
jwt.route.authentication.refresh=auth/refresh
jwt.route.authentication.validate=auth/validate

#########
# LDAP
#########

# Embedded LDAP Server will start automatically if configured as follows: Note: use 'dev' profile here:
spring.ldap.embedded.ldif=classpath:conf/ldap-server-dev.ldif
spring.ldap.embedded.base-dn=dc=kaapvaarders,dc=com
spring.ldap.embedded.port=8389
spring.ldap.embedded.credential.username=uid=ldapAdmin
spring.ldap.embedded.credential.password=admin123
spring.ldap.embedded.validation.enabled=false


# LDAP Client
webapp.authentication.ldap.urls=ldap://localhost:8389/
webapp.authentication.ldap.base=dc=kaapvaarders,dc=com
webapp.authentication.ldap.userdn=uid=ldapAdmin
webapp.authentication.ldap.password=admin123
webapp.authentication.ldap.userSearchBase=ou=people
# > Now using webapp.authentication.ldap.accountType create userSearchFilter query string.
### webapp.authentication.ldap.userSearchFilter=uid={0}
### webapp.authentication.ldap.userSearchFilter=sAMAccountName={0}
webapp.authentication.ldap.enabled=true

##########################################################################
# Database
##########################################################################
# No URL will trigger H2/HSQL in-memory database.
# For DEV: true, create OR update. For PROD use false, validate OR none.
spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update
flyway.enabled=false
spring.flyway.enabled=false
### MariaDB example
#spring.datasource.platform=mariadb
#spring.datasource.url=jdbc:mariadb://mariadb:3306/t5db
#spring.datasource.username=t5admin
#spring.datasource.password=password
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.tomcat.max-active=25
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.properties.hibernate.ejb.interceptor=nl.piter.web.t7.audit.AuditInterceptor

#H2:
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
#spring.datasource.platform=
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=admin
spring.datasource.password=admin
spring.datasource.initialize=true
spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.data=classpath:conf/data.sql

##########################################################################
# Spring Data REST
##########################################################################
# Default generated REST API interface starting url.
# Not used but make sure that if it is used by Spring, this path is used so we can disallow default access:
spring.data.rest.basePath=/api

